# -*- coding: utf-8 -*-
# mqttwarn example configuration file "mqttwarn.ini"

; ------------------------------------------
;             Base configuration
; ------------------------------------------

[defaults]
hostname     = 'localhost'  ; default
port         = 1883
username     = None
password     = None
clientid     = 'mqttwarn'
lwt          = 'clients/mqttwarn'
skipretained = False
cleansession = False

# MQTTv31 = 3   (default)
# MQTTv311 = 4
protocol     = 3

; logging
logformat = '%(asctime)-15s %(levelname)-5s [%(module)s] %(message)s'
logfile   = 'mqttwarn.log'

; one of: CRITICAL, DEBUG, ERROR, INFO, WARN
loglevel  = DEBUG

; path to file containing self-defined functions for formatmap and datamap
functions = 'myfuncs.py'

; name the service providers you will be using.
launch    = file, log, icinga2

[config:file]
append_newline = True
targets = {
    'f01'       : ['/tmp/f.01'],
    'log-me'    : ['/tmp/log.me'],
    'mqttwarn'  : ['/tmp/mqttwarn.err'],
    }
    
[config:log]
targets = {
    'debug'  : [ 'debug' ],
    'info'   : [ 'info' ],
    'warn'   : [ 'warn' ],
    'crit'   : [ 'crit' ],
    'error'  : [ 'error' ]
  }

[config:icinga2]
host     = 'https://icinga2-iot'
port     = 5665
username = 'root'
password = 'icinga'
cacert   = '/var/lib/icinga2/certs/ca.crt'
targets   = {
                      # host    service    check source
    'check-service' : [ 'host', 'service', 'mqttwarn' ]
	}


; special config for 'failover' events
[failover]
targets = log:error, file:mqttwarn


; ------------------------------------------
;                  Basic
; ------------------------------------------

[hello/1]
targets = log:info
format = u'{name}: {number} => {_dthhmm}'


; ------------------------------------------
;                Icinga
; ------------------------------------------
[/sensor/+/+/battery]
targets  = icinga2:check-service
format   = icinga2_sensor_battery()

; ------------------------------------------
;              Periodic tasks
; ------------------------------------------

[cron]
; Demonstrate periodic task feature.
; Define a function for publishing your public ip address to the MQTT bus each minute.
; mosquitto_sub -t 'test/ip/#' -v
#publish_public_ip_address = 60; now=true
